#
# //СиНТАКСиС
# (_) - подчеркивание в пустых скобках обозначает предыдущее значение.

# //идентификатор - имя объекта. Какой то функции, переменной, класса в
# программе. Может состоять из больших и маленьких букв, цифр, знаков
# подчеркивания. Не может начинаться с цифры. Регистр имеет значение. Не может
# совпадать с синтаксисом языка.

# //Переменная - ссылка на какой либо объект. Записывается маленькими буквами
# через знаки подчеркивания: my_variable.

# //Константа - значение не предназначенное для изменения. Принято писать
# большими буквами: MY_CONSTANT. Такое обозначение используется только для себя
# (чтобы случайно не изменить). Чтобы сделать объект доступным только для
# чтения см. курс Essential.

# //Тип данных - определяет возможные значения данных и их смысл. В Python
# используются динамические типы данных. То есть моггут меняться (но это не
# желательно). В большинстве языков - типы задаются и не меняются на протяжении
# всей программы.

# //int, float, complex и другие - тип данных числа.

# //float - число с запятой. Записывется 5.3 или 5. Для больших или маленьких
# чисел используется как возведение в степень через e. Например 5е3 - 5*10 в 3
# степени. Можно возводить и в отрицательную степень, например 5е-3 = 5*10 в
# минус 3 стпени.

# //bool - часть int, для логики. Только 1 или 0. True или False
# соответственно. Всегда пишется с большой буквы.

# //Контейнеры и последовательности str, tuple - неизменные. list - изменяемая.
# None - пустой тип. Объявления переменной не имеющей значения.(с большшой)


# //изменением типа переменных можно преобразовывать строки в числа и наоборот.
# например:
()  # вызов чего то... Если в скобках пусто, то вызов пустых параметров.
# обязательный параметр при создании или вызове функции
stroka = "143"  # Объявление строковой переменной.. То есть она у нас текст.
int(stroka)  # использование данных из строковой переменной как числа.
x = int(43.567)  # создание переменной x типа int, со значением 43 (
# значение после точки отбрасывается)
y: str()  # содание пустой переменной "y" типа str
print(x)

nom = int(stroka)  # Преобразование данных из переменной stroka в целое
# число и в переменную nom, которую уже можно использовать при расчетах и т. п.

type(134)  # вызов класса объекта. В консоли печатает к какому классу
# приналдежит объект. В данном случае - int. В зависимости от содержимого
# может быть string, float, bool, type и т.п.

# Ввод чисел в других системах:
0b01000110100  # - двоичная система. Также для нее есть функция bin()
0o1274653621367  # - восьмеричная система. Есть функция oct()
0x123ABCDEF  # - шестнадцатеричная система. Есть функция hex()

number = 21342134
print(number)

# //Переменные
c = ""  # Простое объявление пустой строковой переменной.
d = int()  # Простое объявление переменной типа int
x = None  # объявление переменной (в данном случае совсем пустой, без типа).
y = 5  # объявление второй переменной. На сей раз тип int
x = 10  # теперь перменной задано значение (в реале может появляться откуда

# * Чтение из файла:
inf = open('file.txt', "r")  # // "r" только для чтения. "w" на запись
s1 = inf.readline()  # чтение одной строки из файла
s2 = inf.readline()  # чтение второй строки и т.д.
inf.close  # закрытие файла, чтобы освободить рессурсы

with open('file.txt') as inf:  # При таком открытии инфо считывается и файл
    s1 = inf.readline()  # сразу закрывается. Считанная инфо остается в памяти
    s2 = inf.readline()

with open("file.txt") as inf:  # Функция читающая весь файл
    for line in inf:
        line = line.strip()
        print(line)

s = inf.readline().strip()  # убрать все служебные символы при чтении строки
#                                   '\t abs  \n'.strip() > 'abs'
# // os.path.join('.', 'dirname', 'filename.txt')
#    вместо './dirname/filename.txt'

ouf = open("file.txt", "w")  # порядок команд для записи в файл
ouf.write('Some text\n')
ouf.write(str(25))
ouf.close

with open ('file.txt', 'w') as ouf:  # При таком открытии идет открытие, запись
    ouf.write('Some text\n')  # и закрытие файла
    ouf.write(str(25))


