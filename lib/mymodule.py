

def max3(z, a):   # значения здесь - могут быть условные (как неизвестные) или
    if z > a:     # известными. Они никак не связаны с конкретными переменными
        return z,   # вернуть
    else:           # "Иначе"" (его можно вообще убирать - лишний оператор)
        return a


# print(max3("ab", "bc"))   # Параметры берутся из памяти (последние значения,)
# # или можно их прописывать числами, или любыми сравниваемыми значениями
# # непосредственно здесь, в скобках (если прописать x и y - возьмет из памяти)


def hello1(name1="World"):
    print("Hi", name1)


# hello1() - если раскоментировать строку то при вызове модуля из программы
# запуска, сразу напечатается значение вызываемой функции

__all__ = ["max3", "hello1"]

""" метод __all__ позволяет сформировать список переменных которые будут
импортированы в другой файл по синтаксису:
from mymodule import *
при таком импорте (через *), все переменные из импортируемого модуля
импортируются в пространство имен принимающего файла.
Чтобы не осмопртировать все подряд, можно через метод __all__ сформировать
список только тех имен, которые действительно нужны во внешнем файле"""
